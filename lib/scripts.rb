stops = Stop.all.select{|s| !s.code.nil? }.map(&:code).sort
stops.each do |stop|
  url = "http://localhost:9999/stops/#{stop}/pdf/sign"
  file_path = "/Users/mholyak/Downloads/stickers/#{stop}.pdf"
  #tiff_file_path = "/Users/mholyak/Downloads/stickers/#{stop}.tiff"
  #p url
  #p file_path
  %x(curl -o "#{file_path}" --silent "#{url}")
  #%x(gs -q -r150x150 -dNOPAUSE -sDEVICE=tiff32nc -sOutputFile=#{tiff_file_path} #{file_path} -c quit)
end



data = {}
Stop.all.to_a.each{|s|
  data[s.code] = [s.code,
                  s.name,
                  "http://www.openstreetmap.org/?mlat=#{s.latitude}&mlon=#{s.longitude}#map=17/#{s.latitude}/#{s.longitude}"
            ].concat(Route.through(s).map { |r|
              if (r.name.index('Нічний').nil?)
                result = r.name.slice(0, 4)
              else
                result = r.name.slice(0, 11)
              end
              result.tr('-', '')
            }.uniq.sort)
}
data = data.values.sort { |a, b| a[0] <=> b[0] }.map {|a| a.join(';') }.join("\n")

#let_stops = Route.select {|r| [1,2].include? r.vehicle_type }.map {|r| r.stops }.flatten.map{|s| s.code }.uniq.sort
let_stops = [2, 3, 4, 6, 7, 11, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 70, 73, 74, 75, 76, 78, 79, 80, 81, 85, 86, 94, 95, 96, 97, 98, 99, 100, 101, 104, 110, 113, 114, 115, 116, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 166, 167, 168, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 194, 195, 196, 197, 219, 220, 221, 222, 223, 225, 226, 227, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 251, 286, 293, 294, 298, 299, 306, 361, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 423, 424, 426, 428, 429, 430, 431, 432, 433, 436, 453, 454, 455, 456, 457, 465, 466, 467, 468, 469, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 519, 524, 525, 527, 528, 531, 532, 533, 534, 536, 538, 539, 540, 541, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 579, 580, 581, 584, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 648, 661, 671, 672, 673, 674, 675, 676, 678, 679, 682, 697, 703, 705, 707, 708, 728, 744, 745, 749, 753, 754, 771, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797]

